syntax = "proto3";
package defundhub.defund.query;

import "query/interquery.proto";
import "tendermint/crypto/proof.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/defund-labs/defund/x/query/types";

// Msg defines the Msg service.
service Msg {
  rpc CreateInterquery(MsgCreateInterquery) returns (MsgCreateInterqueryResponse);
  rpc CreateInterqueryResult(MsgCreateInterqueryResult) returns (MsgCreateInterqueryResultResponse);
  rpc CreateInterqueryTimeout(MsgCreateInterqueryTimeout) returns (MsgCreateInterqueryTimeoutResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateInterquery {
  string creator = 1;

  string storeid = 2; 
  string chainid = 3; 
  string path = 4; 
  bytes key = 5; 
  uint64 timeoutHeight = 6; 
  string connectionId = 7;
}
message MsgCreateInterqueryResponse {}

message MsgCreateInterqueryResult {
  string creator = 1;

  string storeid = 2; 
  bytes  data = 3;
  uint64 height = 4; 
  tendermint.crypto.ProofOps proof = 5;
}
message MsgCreateInterqueryResultResponse {}

message MsgCreateInterqueryTimeout {
  string creator = 1;

  string storeid = 2;
  uint64 timeoutHeight = 3; 
}
message MsgCreateInterqueryTimeoutResponse {}

// this line is used by starport scaffolding # proto/tx/message